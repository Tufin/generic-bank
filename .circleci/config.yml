general:
  branches:
    ignore:
      - world-trading-updates
      - world-trading
      - master
version: 2
jobs:
  build-angular:
    working_directory: /go/src/github.com/tufin/generic-bank
    docker:
      - image: bnohad/docker-angular-cli
    steps:
      - checkout

      - run:
          name: Build generic-app angular app
          command: |
            chmod u+x ./scripts/check-if-ui-changed.sh
            ./scripts/build-app.sh

      - persist_to_workspace:
          root: ng-app/generic-bank
          # Must be relative path from root
          paths:
            - dist

  build:
    working_directory: /go/src/github.com/tufin/generic-bank
    docker:
      - image: tufinim/circleci-go:master
    environment:
      IMAGE_NAME: tufinim/generic-bank
      TUFIN_DOMAIN: generic-bank
      TUFIN_PROJECT: retail
      TUFIN_URL: https://lightorca.tufin.io
      GCLOUD_SERVICE_KEY_FILE: gcloud-service-key.json
      GCLOUD_PROJECT_ID: tufinlight
      GCLOUD_CLUSTER_NAME: aut-cluster
      GCLOUD_ZONE: europe-west1-b
    steps:
      - checkout
      - attach_workspace:
          at: ng-app/generic-bank
      - run:
          name: Build
          command: |
            /scripts/go_build.sh generic-bank
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t "$IMAGE_NAME" .
      - run:
          name: Upload docker image to dockerhub
          command: |
            docker tag $IMAGE_NAME $IMAGE_NAME:$CIRCLE_BUILD_NUM
            echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
            docker push $IMAGE_NAME
      - run:
          name: Tufin image analysis
          command: |
            bash <(curl -H "Authorization: Bearer $TUFIN_API_KEY" -s $TUFIN_URL/api/scripts/image-scan) "$IMAGE_NAME:$CIRCLE_BUILD_NUM"
      - run:
          name: Tufin Continuous Security Policy
          command: |
            bash <(curl -H "Authorization: Bearer $TUFIN_API_KEY" -s $TUFIN_URL/lighthouse/$TUFIN_DOMAIN/$TUFIN_PROJECT/bash) policy.yaml
          environment:
            TUFIN_ALLOW_ACCESS_SERVICE: admin
      - run:
          name: Authenticate with gcloud
          command:
            echo $GCLOUD_SERVICE_KEY_LIGHT | /scripts/gcloud_auth.sh
      - run:
          name: Update deployment 'admin' on google cloud (if cluster is up and running)
          command: |
            /scripts/update_deployment.sh $GCLOUD_PROJECT_ID $GCLOUD_CLUSTER_NAME $GCLOUD_ZONE deployment/$DEPLOYMENT $DEPLOYMENT=$IMAGE_NAME:$CIRCLE_BUILD_NUM default
          environment:
            DEPLOYMENT: admin
      - run:
          name: Update deployment 'customer' on google cloud (if cluster is up and running)
          command: |
            /scripts/update_deployment.sh $GCLOUD_PROJECT_ID $GCLOUD_CLUSTER_NAME $GCLOUD_ZONE deployment/$DEPLOYMENT $DEPLOYMENT=$IMAGE_NAME:$CIRCLE_BUILD_NUM default
          environment:
            DEPLOYMENT: customer
      - run:
          name: Update deployment 'balance' on google cloud (if cluster is up and running)
          command: |
            /scripts/update_deployment.sh $GCLOUD_PROJECT_ID $GCLOUD_CLUSTER_NAME $GCLOUD_ZONE deployment/$DEPLOYMENT $DEPLOYMENT=$IMAGE_NAME:$CIRCLE_BUILD_NUM default
          environment:
            DEPLOYMENT: balance


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build-angular
      - build:
          requires:
            - build-angular