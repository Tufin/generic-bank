version: 2
jobs:
  build:
    working_directory: /go/src/github.com/tufin/generic-bank
    docker:
      - image: tufinim/circleci-go:87-master
    environment:
      IMAGE_NAME: tufinim/generic-bank
      TUFIN_DOMAIN: generic-bank
      TUFIN_PROJECT: world-trading
      TUFIN_HOST: orca.tufin.io
    steps:
      - checkout

      - run:
          name: Fetch latest UI from Tufin/generic-bank-ui releases
          command: |
            mkdir ui
            curl -o ui.zip `curl -i -H "Accept: application/octet-stream" -H "Authorization: token $GITHUB_TOKEN" $(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/Tufin/generic-bank-ui/releases/latest | grep url | grep releases\/assets | egrep -o "https://[^\"]+") | grep location: | cut -d " " -f2 | tr -d '\r\n'` && echo 'ignore cache'
            unzip ui.zip -d ./ui

      - run:
          name: Define Environment Variable at Runtime
          command: |
            echo 'export TUFIN_API_KEY=$WORLD_TRADING_TUFIN_API_KEY' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Build
          command: |
            /scripts/go_build.sh generic-bank
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t "$IMAGE_NAME" .
      - run:
          name: Upload docker image to dockerhub
          command: |
            docker tag $IMAGE_NAME $IMAGE_NAME:$CIRCLE_BUILD_NUM
            echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
            docker push $IMAGE_NAME
      - run:
          name: Tufin image analysis
          command: |
            bash <(curl -H "Authorization: Bearer $TUFIN_API_KEY" -s $TUFIN_URL/api/scripts/image-scan) "$IMAGE_NAME:$CIRCLE_BUILD_NUM"
            echo "$TUFIN_SECURITY_SCORE"
            echo "$TUFIN_SECURITY_SCORE" >> env_file
      - run:
          name: Tufin Continuous Security Policy
          command: |
            source env_file
            echo "$TUFIN_SECURITY_SCORE"
            bash <(curl -H "Authorization: Bearer $TUFIN_API_KEY" -s $TUFIN_URL/lighthouse/$TUFIN_DOMAIN/$TUFIN_PROJECT/bash) policy.yaml
          environment:
            TUFIN_ALLOW_ACCESS_SERVICE: admin
      - run:
          name: Authenticate with gcloud
          command:
            echo $GCLOUD_SERVICE_KEY | /scripts/gcloud_auth.sh
      - run:
          name: Update deployment on google cloud (if tufin.io cluster is up and running)
          command: |
            /scripts/update_deployment.sh $GCLOUD_PROJECT_ID $GCLOUD_CLUSTER_NAME $GCLOUD_ZONE deployment/$DEPLOYMENT admin=$IMAGE_NAME:$CIRCLE_BUILD_NUM default
          environment:
            GCLOUD_SERVICE_KEY_FILE: gcloud-service-key.json
            GCLOUD_PROJECT_ID: dream-198012
            GCLOUD_CLUSTER_NAME: aut2-cluster
            GCLOUD_ZONE: europe-west1-b
            DEPLOYMENT: admin

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build-angular
      - build-server:
          requires:
            - build-angular